.navbar.navbar-vert {
    /* should look on drawScrollbars? */
    overflow-y: auto;
}

.navbar.navbar-horz {
    /* should look on drawScrollbars? */
    overflow-x: auto;
}

.navbar-nav.navbar-nav-horz,
.navbar-nav.navbar-nav-vert
{
    display: flex;

    flex-wrap: nowrap;

    /* the trick is that we're using navbar / navbar-nav to get proper design, for example active / nonactive / hover links */
    /* but navbar classes also define some "responsive layout", which we don't want*/
    /* in particular navbar sets align-items: center, and justify-content:space-between (flex-start that is set by navbar-expand), which we usually don't want, since navbar is just a wrapper for the navbar-nav */
    /* basically there are to approaches, depending on whether we want to align items in nav, or the whole nav */
    /* this approach assumes that items are aligned, so GToolbarNavigatorView sets the alignment for the nav */
    flex: 1 1 auto;
    align-self: stretch;
    /* in the other approach we should override align-items and justify-content to the default flex-start (align-self won't do since the important won't work), and set the alignment for the navbar */
}

.navbar-nav.navbar-nav-horz > *,
.navbar-nav.navbar-nav-vert > * {
    /* we don't want navbar items to be shrinked by default */
    flex-shrink: 0;
}

.navbar-nav.navbar-nav-horz
{
    flex-direction: row;

    /* in horizontal navbar it makes sense to center the text */
    text-align: center;
}

.navbar-nav.navbar-nav-vert,
.navbar-expand .navbar-nav.navbar-nav-vert /* navbar-expand navbar-nav somewhy sets flex-direction: row */
{
    flex-direction: column;

    /*align-items: flex-start;*/
}

/*.nav-link.nav-link-vert {*/
/*    display: inline-grid;*/
/*    justify-items: center;*/
/*    align-self: center;*/
/*    text-align: center;*/
/*}*/
/*.nav-link-vert > i {*/
/*    font-size: 1.5rem;*/
/*}*/

/* used to align icons (important for hover for example), because font awesome icons for example have different width */
/* could be refactored to the explicit .navbar-icon-fixed-width */
.navbar-nav.navbar-nav-vert .nav-link > i {
    width: 1.25em;
    text-align: center;
}

/* to have "more aligned" elements */
.navbar-icon-fixed-width-large .nav-link > i {
    width: 3em;
}

.navbar-icon-large .nav-link > i,
.navbar-icon-large.nav-link > i {
    font-size: 1.5rem;
}

.navbar-icon-xlarge .nav-link > i,
.navbar-icon-xlarge.nav-link > i {
    font-size: 2.5rem
}

.navbar-hidden .nav-link,
.navbar-hidden.nav-link {
    display: none;
}

.navbar-text-hidden .nav-link,
.navbar-text-hidden.nav-link {
    font-size: 0;
}
/* removing margins, since text is actually hidden */
.navbar-text-hidden .nav-link > i.wrap-text-img,
.navbar-text-hidden.nav-link > i.wrap-text-img {
    margin-bottom: 0;
    margin-right: 0;
}

.nav-link.nav-link-horz-1 {
    margin-left: 1rem;
}
.nav-link.nav-link-horz-2 {
    margin-left: 2rem;
}
.nav-link.nav-link-horz-3 {
    margin-left: 3rem;
}

/*.nav-link-horz .btn-image-img {*/
/*    height: 1rem;*/
/*}*/

/* we propagate navbar-text-on-hover to the parent flex panel of the same direction if it has all children with navbar-text-on-hover */
/* so to make it work for the whole panel we need to add :not(.navbar-text-on-hover) */

.navbar-text-on-hover {
    --text-hover-duration: 300ms;
    --text-hover-curve-horz: ease-out;
    --text-hover-curve-vert: linear;
}

/* converting margins to "inner paddings" (to include margins into the transition) with the pseudo before element*/

.navbar-text-on-hover .wrap-text-not-empty.wrap-img-horz > .wrap-text-img {
    margin-right: 0;
}
.navbar-text-on-hover .wrap-text-not-empty.wrap-img-vert > .wrap-text-img {
    margin-bottom: 0;
}
.navbar-text-on-hover .wrap-img-horz > .wrap-text-div {
    display: inline-flex;
    align-items: center; /* needed to transit opposite direction width (when it's not auto) */
    flex-direction: row;
}
.navbar-text-on-hover .wrap-img-horz > .wrap-text-div::before {
    content: '';

    min-width: var(--wrap-img-horz-margin);
}
.navbar-text-on-hover .wrap-img-vert > .wrap-text-div {
    display: inline-flex;
    align-items: center; /* needed to transit opposite direction width (when it's not auto) */
    flex-direction: column;
}
.navbar-text-on-hover .wrap-img-vert > .wrap-text-div::before {
    content: '';

    min-height: var(--wrap-img-vert-margin);
}

/* hovering */

.navbar-text-on-hover .wrap-text-not-empty {
    overflow: hidden; /* we need to set overflow: hidden, since we're using width / height */
}

.forms-container-not-empty .navbar-text-on-hover:not(:hover) .wrap-text-div {
    max-height: 0;
    max-width: 0;

    color: transparent; /* color hack */

    transition: max-height var(--text-hover-duration) var(--text-hover-curve-vert),
                max-width var(--text-hover-duration) var(--text-hover-curve-horz),
                color 0s linear var(--text-hover-duration); /* color hack */
}

/* to have "more aligned" elements */
.navbar-text-on-hover .wrap-img-vert .wrap-text-img {
    width: 3em;
}

.navbar-text-on-hover .wrap-text-div {
    /* we need to set inline-block or inline-flex (not inline) might be enough, since we're using width / height */
    display: inline-block; /* actually it is changed to inline-flex, when "moving margins" */

    max-height: 3em;
    max-width: 10em;
    transition: max-height var(--text-hover-duration) var(--text-hover-curve-vert),
                max-width var(--text-hover-duration) var(--text-hover-curve-horz),
                color 0s; /* color hack */

    /* we can't use overflow: clip for the text main direction the text will be cut but parent's padding (so the text is cut by nothing) */
    /* also the problem is that overflow can not be transitioned */
    /* so for now we use the following color hack: */
    /* we leave the overflow: visible (this way we fix paddings), and set color to transparent with some transition */
    /* also in this hack we need to change parent overflow to hidden / clip (otherwise container scroll will appear) */
    /*overflow-x/y: clip;*/

    white-space: nowrap; /* to avoid changing height while transitioning*/
}

/* Chromium + Safari */
@supports (not (-moz-appearance: none)) {
    .navbar.navbar-auto-icon-font-size {
        overflow: hidden; /*  */
    }

    .navbar.navbar-auto-icon-font-size .navbar-nav {
        align-items: stretch !important; /* overrides BS !important */
    }

    .navbar.navbar-auto-icon-font-size .nav-link,
    .navbar.navbar-auto-icon-font-size.nav-link {
        container-type: inline-size;
        writing-mode: vertical-lr;
    }

    .navbar.navbar-auto-icon-font-size .nav-link > i,
    .navbar.navbar-auto-icon-font-size.nav-link > i{
        font-size: 100cqh;
    }
}

.navbar-force-align-start .navbar-nav {
    align-items: start !important; /* overrides BS !important */
}

.panelNavigatorView {
    display: block;
}
