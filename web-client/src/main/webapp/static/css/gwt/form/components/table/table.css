.table {
    table-layout: fixed; /* we want predictable (not dependant from the content) manual column sizes  */
    width: 100%; /* it's odd but without this table-layout is switched to auto */
    height: fit-content; /* it's even more odd - without this height : 100% in tds won't work */
}

.cell-div {
    /* it's tricky here, this cell-div used for property rendering and in particular property "sizing"
     "sizing" needs box-sizing to be content-box to ignore paddings, but it's no good for width 100%, so we have to
     set it to fill-available to have 100% with the respect of paddings (for this class explicit width is not set, for now, while colgroup widths are used)*/
    width: 100%;
    width: -webkit-fill-available;
    width: -moz-available;
    min-height: 100%; /* we want to stretch div in the cell even if the explicit height is set */
}

/* ----- GGridPropertyTable ----- */
.dataGridWidget {
    /*border: 1px solid var(--component-border-color);*/
    /*border-radius: var(--table-border-radius);*/

    /*background: var(--component-background-color);*/
    cursor: default;
    /*overflow: hidden; !* important for "removing outer grid borders", since they are removed with margin -1 overflow should be hidden *!*/
}

.wrap-text-not-empty {
}
.wrap-text-not-empty > .wrap-img-horz-margins {
    /*overflow: hidden;*/
    /*margin: 0.0625rem 0.125rem;*/
    margin-right: 0.25rem;
}

.wrap-text-not-empty > .wrap-img-vert-margins {
    /*overflow: hidden;*/
    /*margin: 0.0625rem 0.125rem;*/
    margin-bottom: 0.25rem;
}

.dataGridRow {
}
.dataGridCell {
    /*padding: 0;*/

    /* ??? */
    /*overflow: hidden;*/
}