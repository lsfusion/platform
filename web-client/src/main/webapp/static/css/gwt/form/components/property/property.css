
.prop-value {
    box-sizing: content-box; /* it's important to have content-box sizing, since we're setting explicit heights for the renderer element (and we don't want paddings to be included, since we're calculating elements heights based on contents) */
}

.prop-value, .prop-value.comp-shrink-horz {
    overflow-x: hidden;
}

.prop-value, .prop-value.comp-shrink-vert {
    overflow-y: hidden;
}

.prop-input {
    background-color:transparent;
    /*var(--component-background-color);*/
    color: var(--text-color);
}

/* ------------ Colored corner triangles  ------------ */

.notNullCornerTriangleHolder, .changeActionCornerTriangleHolder {
    position: relative;
}
.notNullCornerTriangleHolder::after, .changeActionCornerTriangleHolder::after {
    content: "";
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 0 5px 5px;
    position: absolute;
    right: 0;
    bottom: 0;
}

.notNullCornerTriangleHolder::after {
    border-color: transparent transparent var(--not-null-corner-triangle-color) transparent;
}

.changeActionCornerTriangleHolder::after {
    border-color: transparent transparent var(--focus-color) transparent;
}

.emptyValueString {
    color: var(--null-value-string-color);
}

.nullValueString.requiredValueString {
    /*color: var(--required-value-string-color);*/
    position: relative;
}
.nullValueString.requiredValueString::before { /* using ::before to do not conflict with triangles  */
    content: "";
    background: var(--not-null-line-color);
    height: 1px;
    bottom: 2px;
    right:0;
    left:0;
    margin: 0 0.3125rem;
    position:absolute;
}

.prop-display-flex {
    display: flex;
}

.prop-flex-horz-start {
    justify-content: flex-start;
}
.prop-flex-horz-center {
    justify-content: center;
}
.prop-flex-horz-end {
    justify-content: flex-end;
}
.prop-flex-vert-start {
    align-items: flex-start;
}
.prop-flex-vert-center {
    align-items: center;
}
.prop-flex-vert-end {
    align-items: flex-end;
}
.prop-flex-vert-stretch {
    justify-content: stretch;
}

.prop-text-horz-start {
    text-align: left;
}
.prop-text-horz-center {
    text-align: center;
}
.prop-text-horz-end {
    text-align: right;
}
.prop-text-vert-start {
    vertical-align: top;
}
.prop-text-vert-center {
    vertical-align: middle;
}
.prop-text-vert-baseline {
    vertical-align: baseline;
}
.prop-text-vert-end {
    vertical-align: bottom;
}