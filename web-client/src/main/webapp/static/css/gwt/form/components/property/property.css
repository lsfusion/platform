
.prop-size-value {
    box-sizing: content-box; /* it's important to have content-box sizing, since we're setting explicit heights for the renderer element (and we don't want paddings to be included, since we're calculating elements heights based on contents) */
}

.prop-value, .prop-value.comp-shrink-horz {
    overflow-x: hidden;
}

.prop-value, .prop-value.comp-shrink-vert {
    overflow-y: hidden;
}

.prop-input {
    /*background-color:transparent;*/
    /*var(--component-background-color);*/
    /*color: var(--text-color);*/
}

.text-based-prop:not(.prop-input) {
    cursor: default; /* need this since text by default gets "editing" cursor, however it overrides for example resize cursor, but it's not clear what to do with it */
}

.emptyValueString {
    color: var(--null-value-string-color);
}

.prop-display-flex, .prop-display-flex.btn {
    display: flex;
}

.prop-flex-horz-start {
    justify-content: flex-start;
}
.prop-flex-horz-center {
    justify-content: center;
}
.prop-flex-horz-end {
    justify-content: flex-end;
}
.prop-flex-vert-start {
    align-items: flex-start;
}
.prop-flex-vert-center {
    align-items: center;
}
.prop-flex-vert-end {
    align-items: flex-end;
}
.prop-flex-vert-stretch {
    justify-content: stretch;
}

.prop-text-horz-start {
    text-align: left;
}
.prop-text-horz-center {
    text-align: center;
}
.prop-text-horz-end {
    text-align: right;
}
.prop-text-vert-start {
    vertical-align: top;
}
.prop-text-vert-center {
    vertical-align: middle;
}
.prop-text-vert-baseline {
    vertical-align: baseline;
}
.prop-text-vert-end {
    vertical-align: bottom;
}