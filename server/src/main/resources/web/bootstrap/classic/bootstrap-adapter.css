
/* has to be equal to the input (form-control) border size, to have proper property toolbar position */
:root {
    --input-border-width: 1px;
}

:root {
    --border-padding: 0.375rem;

    --border-comp-horz-padding: var(--border-padding);
    --border-comp-vert-padding: var(--border-padding);
    --border-label-horz-padding: var(--border-padding);
    --border-label-vert-padding: var(--border-padding);
    --border-cont-horz-padding: 1rem;
    --border-cont-vert-padding: 1rem;

    /* should correspond to $table-border-width bootstrap scss variable */
    --table-outline-width: 1px;

    --text-color: var(--bs-body-color);
    --background-color: var(--bs-body-bg);
    --component-background-color: var(--bs-form-control-bg);
    --grid-separator-border-color: var(--bs-table-border-color);
    --component-border-color: var(--panel-border-color);

    --link-color: var(--bs-link-color);
}

.caption-panel-header {
    margin: var(--border-label-vert-padding) var(--border-label-horz-padding);
}

/* there is a really odd style in bootstrap.min.css */
/*.table > :not(:first-child) {*/
/*    border-top: 2px solid currentColor*/
/*}*/

.table > :not(:first-child) {
    border-top-width: 0;
}
.table > :not(:first-child) {
    border-top-color: inherit;
}

:root {
    --border-width: 1px;
}

/* we don't want to use accordion, so we'll use the card class, but in this case we have to implement collapsible manually */

.caption-panel-header, .card-header {
    /* h6 has textbox cursor by default*/
    cursor: default;
}

/* we want to have the same width for expanded and collapsed folders*/
.caption-panel-header.collapsible::before,
.card-header.collapsible::before,
.nav-bs-mobile-folder::before {
    /*font-family: "Font Awesome 6 Free";*/
    margin-right: var(--border-label-horz-padding);
    width: 0.75em;
}

/*.nav-bs-mobile-folder::before {*/
/*    align-self: center;*/
/*}*/

.caption-panel-header.collapsible.collapsed::before,
.card-header.collapsible.collapsed::before,
.nav-bs-mobile-folder.collapsed::before {
    content: "\f105";
    font: var(--fa-font-solid);
}

.caption-panel-header.collapsible:not(.collapsed)::before,
.card-header.collapsible:not(.collapsed)::before,
.nav-bs-mobile-folder:not(.collapsed)::before {
    content: "\f107";
    font: var(--fa-font-solid);
}

/*focused cell, same as table-active (which is used for the table-active), but opacity 0.3 instead of 0.1*/
.focused-cell {
    --bs-table-accent-bg: rgba(0, 0, 0, 0.3);
}

/* it's odd, but modal-body has flex-shrink (flex: 1 1 auto), but min-height is not set to zero (as well as overflow:auto), what doesn't make sense */
.modal-body {
    min-height: 0;
}

/* need this since we're using form-control not only for input fields, but for other divs with dynamic content and we want this form-control elements have the same behaviour as the regular form-control inputs */
/* it could be solved another way buy removing form-control and prop-value from the parent element (and not setting remove-all-pmb), but we don't usually do this */
.form-control:focus-within {
    color: var(--bs-body-color);
    background-color: var(--bs-form-control-bg);
    border-color: #86b7fe;
    outline: 0;
    box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
}

/* the problem that for toolbar there is no appropriate class in bootstrap, default toolbar with "regular" (not solid) icons looks pretty awkward */
/* so we increase their size, remove paddings / borders to look more autnentic / similar to regular buttons */

.btn-toolbar .btn {
    border: 0;
    padding: 0 0.25em;
    font-size: 1.25rem;
    /* bootstrap uses more complex selectors, so we'll just use important   */
    border-radius: 0.375em !important;
}

/* we don't want the toolbar to have transparent background, but we still want hover background (just like for the navigator) */

.btn-toolbar .btn-image:hover {
    background-color: var(--component-hover-background-color);
}

.btn-toolbar .btn-image.active {
    background-color: var(--component-hover-background-color);
}

/*.fa, .fa-brands, .fa-classic, .fa-regular, .fa-sharp, .fa-solid, .fab, .far, .fas {*/
/*    line-height: inherit;*/
/*}*/

.property-toolbar-item:hover,
.property-toolbar-item.background-inherit:hover {
    background-color: var(--component-hover-background-color);
}

/* --- workaround for disappearing sticky cell borders when scrolling --- */
.scrolled-down:not(.table-borderless) .dataGridHeaderRow,
/*.scrolled-up:not(.table-borderless) .dataGridFooterRow,*/ /* switched to permanent bottom border in tableContainer */
.table:not(.table-borderless) .dataGridFooter:not(.empty-footer) .dataGridFooterRow {
    outline: var(--table-outline-width) solid var(--bs-table-border-color);
}

@supports (-moz-appearance: none) {
    /*Fixes missing line under header */
    .dataGridHeaderRow{
        outline: var(--table-outline-width) solid var(--bs-table-border-color);
    }
}

/* 'border-collapse: collapse' + sticky header/footer make header/footer borders disappear 
 In fact it looks as if border became transparent. As outline is being drawn outside border, we still see empty line 
 between header/footer and outline. So we need to hide these borders */
.scrolled-down:not(.table-borderless) .dataGridHeaderCell,
.scrolled-down.table-bordered .dataGridHeaderRow,
.table.table-bordered .empty-header .dataGridHeaderRow,
.table.table-bordered .empty-footer .dataGridFooterRow,
.table.table-bordered .dataGridColumnRow,
.table:not(.table-bordered) .empty-header .dataGridHeaderCell,
.empty-footer .dataGridFooterCell,
.empty-footer .arrow-th, /* cell with .arrow-th doesn't have .dataGridFooterCell class. adding for them to behave the same way */
.dataGridFooterRow:not(.empty-footer) .dataGridFooterCell,
.dataGridFooterRow:not(.empty-footer) .arrow-th {
    border-bottom: none;
}
.scrolled-down.table-bordered .dataGridHeaderRow,
.table.table-bordered .dataGridColumnRow,
.table-bordered .dataGridBody .dataGridRow {
    border-top: none;
}
/* move header and footer on border width in order to see top/bottom outline,
 which otherwise hides under table container */
.scrolled-down.table-bordered :not(.empty-header) .dataGridHeaderRow {
    top: var(--table-outline-width);
}
@media (min-width: 570px) {  /* likely because of rounding in mobile version we see "empty" border under footer with bottom: 1px */
    .table :not(.empty-footer) .dataGridFooterRow {
        bottom: var(--table-outline-width);
    }
}
.empty-header .dataGridHeaderCell,
.empty-footer .dataGridFooterCell,
.empty-footer .arrow-th {  /* cell with .arrow-th doesn't have .dataGridFooterCell class. adding for them to behave the same way */
    padding: 0;
}
/* only partly fixes vertical borders */
.table.table-bordered .dataGridStickyHeader.sticked,
.table.table-bordered .dataGridStickyCell.sticked,
.table.table-bordered .dataGridStickyFooter.sticked {
    outline: var(--table-outline-width) solid var(--bs-table-border-color);
    border-right: none;
}

/* --- --- */

@supports (-moz-appearance: none) {
    /*This is because in firefox, table cells lose their bottom border because they are hidden by the background.
    Firefox bug is active more than 11 years https://bugzilla.mozilla.org/show_bug.cgi?id=688556*/
    .table > :not(caption) > * > * {
        background-clip: padding-box;
    }
}

/* Scroll shadow support */

.scroll-shadow-container-start.scrolled > .scroll-shadow-header {
    z-index: 1;
    box-shadow: 0 0.1rem 0.5rem 0 rgba(var(--bs-body-color-rgb),.15);
}
.scroll-shadow-container-end.scrolled > .scroll-shadow-header {
    z-index: 1;
    box-shadow: 0 -0.1rem 0.5rem 0 rgba(var(--bs-body-color-rgb),.15);
}

/* The end tab bar location support - just inverting borders */

.nav-tabs-vert.nav-tabs-end {
    border-top: var(--bs-nav-tabs-border-width) solid var(--bs-nav-tabs-border-color);
    border-bottom: none;

    --bs-nav-tabs-link-active-border-color: var(--bs-body-bg) var(--bs-border-color) var(--bs-border-color);
}

.nav-tabs-vert.nav-tabs-end .nav-link {
    margin-top: calc(-1 * var(--bs-nav-tabs-border-width));
    margin-bottom: 0;
    border-bottom-left-radius: var(--bs-nav-tabs-border-radius);
    border-bottom-right-radius: var(--bs-nav-tabs-border-radius);
    border-top-left-radius: 0;
    border-top-right-radius: 0;
}
