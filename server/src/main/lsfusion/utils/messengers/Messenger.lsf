MODULE Messenger;

REQUIRE Reflection, Utils;

CLASS Messenger {}
isSynchronize = ABSTRACT CASE BOOLEAN (Messenger);
showTitle = ABSTRACT CASE BOOLEAN (Messenger);

CLASS ChatType {
    private 'Private',
    group 'Group',
    channel 'Channel'
}

CLASS Account '{messenger.account}';
TABLE account (Account);

name '{messenger.account.name}' = DATA STRING (Account);
account(LONG id) = GROUP NAGGR Account a BY LONG (a) IF a IS Account; 
messenger '{messenger.messenger}' = DATA Messenger (Account);
captionMessenger '{messenger.messenger}' (Account a) = staticCaption(messenger(a));
token '{messenger.token}' = DATA STRING (Account) NONULL CHARWIDTH 50;

CLASS Chat '{messenger.chat}';
TABLE chat (Chat);

CLASS Message '{messenger.messages}';
TABLE messages (Message);

chat = DATA Chat (Message);
message '{messenger.message}' = DATA STRING (Message);
file = DATA NAMEDFILE(Message);
from '{messenger.from}' = DATA STRING (Message);
dateTime '{messenger.datetime}' = DATA DATETIME (Message);
account = DATA Account (Chat) NONULL DELETE;
chatType = DATA ChatType (Chat);
captionChatType '{messenger.chat.type}' (Chat c) = staticCaption(chatType(c)) CHARWIDTH 10 IN id;
id '{messenger.chat.id}' = DATA STRING (Chat) CHARWIDTH 10;
chatIdAccount = GROUP AGGR Chat c BY account(c), id(c);
name '{messenger.chat.name}' = DATA STRING (Chat) IN id;
title '{messenger.chat.title}' = DATA STRING (Chat);
newMessage '{messenger.chat.new.message}' = DATA LOCAL TEXT (Chat);
newAttachment '{chat.attachment}' = DATA LOCAL NESTED NAMEDFILE(Chat);

sendMessageResult = DATA LOCAL STRING();
sendMessage '{messenger.chat.send.message}' ABSTRACT CASE (Chat, STRING);
sendFile '{messenger.chat.send.message}' ABSTRACT CASE (Chat, NAMEDFILE);

sendMessage '{messenger.chat.send.message}' (Chat chat) {
    sendMessage(chat, newMessage(chat));
    IF NOT sendMessageResult() THEN sendFile(chat, newAttachment(chat));
    IF sendMessageResult() THEN {
        MESSAGE sendMessageResult() NOWAIT;
    }
    sendMessageResult() <- NULL;
    newMessage(chat) <- NULL;
    newAttachment(chat) <- NULL;
}

synchronizeChats ABSTRACT LIST (Account);
WHEN SET (Account a IS Account) DO {
    synchronizeChats(a);
}

synchronizeChatsAction '{messenger.account.synchronize}' (Account a) {
    synchronizeChats(a);
    APPLY;
}

openFile '{system.open.file}' (Message m) {
    open(file(m));
}

FORM messengers '{messenger.messengers}' AUTOREFRESH 20
    OBJECTS a = Account
    PROPERTIES(a) READONLY name, captionMessenger, token 
    PROPERTIES(a) NEWSESSION synchronizeChatsAction TOOLBAR SHOWIF isSynchronize(messenger(a)), NEW, EDIT, DELETE 
    OBJECTS c = Chat
    PROPERTIES(c) READONLY id, captionChatType, name, title SHOWIF showTitle(messenger(a)), DELETE CHANGEABLE
    PROPERTIES(c) PANEL newMessage, sendMessage, newAttachment
    
    OBJECTS m = Message
    PROPERTIES(m) READONLY from, dateTime, message 
    PROPERTIES(m) openFile READONLYIF NOT file(m)
    FILTERS chat(m) == c 
    ORDERS dateTime(m) DESC

    FILTERS account(c) == a;

FORM messenger '{messenger.messenger}'
    OBJECTS a = Account PANEL
    PROPERTIES(a) name, captionMessenger, token     
    EDIT Account OBJECT a;

DESIGN messengers {
    NEW accounts {
        fill = 1;
        MOVE BOX(a);
    }
    NEW chat {
        fill = 3;
        horizontal = TRUE;
        MOVE BOX(c);
        MOVE BOX(m);
    }
    MOVE PROPERTY(newMessage(c)) {
        panelCaptionVertical = TRUE;
    }
    NEW sendMessage {
        MOVE PROPERTY(sendMessage(c));
        MOVE PROPERTY(newAttachment(c));
        horizontal = TRUE;
    }
    MOVE TOOLBARBOX; 
}

NAVIGATOR {
    notification {
        NEW messengers;
    }
}