MODULE WebSocket;

REQUIRE SystemEvents;

CLASS WebSocketClient;

hostname = DATA STRING(WebSocketClient);

stringMessage = DATA STRING(WebSocketClient);
binaryMessage = DATA RAWFILE(WebSocketClient);

onStarted() + {
    DELETE WebSocketClient c WHERE c IS WebSocketClient;
}

connectionCreated = DATA LOCAL NESTED WebSocketClient();
onOpen ABSTRACT LIST (STRING);
onOpen(STRING hostname) + {
    NEW c = WebSocketClient {
        connectionCreated() <- c;
        hostname(c) <- hostname;
    }
}

onStringMessage ABSTRACT LIST (WebSocketClient, STRING);

onBinaryMessage ABSTRACT LIST (WebSocketClient, RAWFILE);

onClose ABSTRACT LIST (WebSocketClient);
onClose(WebSocketClient c) + {
    DELETE c;
}

sendStringMessage 'Send string message' INTERNAL 'lsfusion.server.physics.dev.integration.external.to.net.websocket.SendStringMessageAction' (WebSocketClient, STRING);
sendStringMessage 'Send string message' (WebSocketClient c) {
    sendStringMessage(c, stringMessage(c));
    stringMessage(c) <- NULL;
}
sendBinaryMessage 'Send binary message' INTERNAL 'lsfusion.server.physics.dev.integration.external.to.net.websocket.SendBinaryMessageAction' (WebSocketClient, RAWFILE);
sendBinaryMessage 'Send binary message' (WebSocketClient c) {
    sendBinaryMessage(c, binaryMessage(c)); 
    binaryMessage(c) <- NULL;
}

FORM webSockets 'WebSockets'
    OBJECTS c = WebSocketClient
    PROPERTIES(c) id 'id' = VALUE, hostname, 
        stringMessage PANEL, sendStringMessage,
        binaryMessage PANEL, sendBinaryMessage
;

DESIGN webSockets {
    NEW main {
        fill = 1;
        MOVE BOX(c) {
            fill = 1;
        };
        NEW messages {
            lines = 2;
            MOVE PROPERTY(stringMessage(c)) { caption = NULL; };
            MOVE PROPERTY(sendStringMessage(c));
            MOVE PROPERTY(binaryMessage(c))  { caption = NULL; };
            MOVE PROPERTY(sendBinaryMessage(c));
        }
        MOVE TOOLBARBOX;   
    }
}

NAVIGATOR {
    system {
        NEW webSockets;
    }
}