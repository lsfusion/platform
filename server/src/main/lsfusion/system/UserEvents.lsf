MODULE UserEvents;

orders = DATA LOCAL JSON();
filters = DATA LOCAL JSON();
filterGroups = DATA LOCAL INTEGER();
filtersProperty = DATA LOCAL STRING();

property = DATA LOCAL STRING(INTEGER);
desc = DATA LOCAL BOOLEAN(INTEGER);

FORM orders
    OBJECTS value = INTEGER
    PROPERTIES(value) property EXTID 'property', desc
    FILTERS property(value)
;

compare = DATA LOCAL STRING(INTEGER);
negation = DATA LOCAL BOOLEAN(INTEGER);
or = DATA LOCAL BOOLEAN(INTEGER);
value = DATA LOCAL STRING(INTEGER);

FORM filters
    OBJECTS f = INTEGER EXTID 'value'
    PROPERTIES(f) property, negation, compare, value, or
    FILTERS property(f)
;

filterProperty(STRING groupObject, STRING property, STRING value) {
    EVAL 'run() \{ FILTERS ' + groupObject + '; \}';

    IMPORT filters FROM filters();
    
    FOR(property(INTEGER f) == property) DO {
        value(f) <- value;
    } ELSE {
        LOCAL max = INTEGER();
        max() <- OVERRIDE (GROUP MAX INTEGER f IF property(f)) + 1, 0;
        property(max()) <- property;
        value(max()) <- value;
    }
    
    EXPORT filters TO filters;

    EVAL 'run() \{ FILTER ' + groupObject + '; \}';
}

valueFiltersProperty = DATA LOCAL STRING();
filtersProperty(STRING groupObject, STRING property) {
    EVAL 'run() \{ FILTERS ' + groupObject + '; \}';

    IMPORT filters FROM filters();
    
    FOR(property(INTEGER f)) DO {
        IF(property(f) == property) THEN {
            valueFiltersProperty() <- value(f);
        }
    }
}